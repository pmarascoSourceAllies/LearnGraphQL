# Root Query Type
type Query {
  # User Queries
  users: [User!]!
  user(id: ID!): User

  # Product Queries
  products(categoryId: ID, search: String): [Product!]!
  product(id: ID!): Product

  # Category Queries
  categories: [Category!]!
  category(id: ID!): Category

  # Order Queries
  orders(userId: ID!): [Order!]!
  order(id: ID!): Order

  # Payment Queries
  payment(id: ID!): Payment
}

# Root Mutation Type
type Mutation {
  # User Mutations
  registerUser(input: RegisterUserInput!): User!
  updateUser(id: ID!, input: UpdateUserInput!): User!
  deleteUser(id: ID!): Boolean!

  # Product Mutations
  addProduct(input: AddProductInput!): Product!
  updateProduct(id: ID!, input: UpdateProductInput!): Product!
  deleteProduct(id: ID!): Boolean!

  # Category Mutations
  addCategory(input: AddCategoryInput!): Category!
  updateCategory(id: ID!, input: UpdateCategoryInput!): Category!
  deleteCategory(id: ID!): Boolean!

  # Order Mutations
  createOrder(input: CreateOrderInput!): Order!
  updateOrderStatus(id: ID!, status: String!): Order!

  # Payment Mutations
  createPayment(input: CreatePaymentInput!): Payment!
}

# User Type
type User {
  id: ID!
  name: String!
  email: String!
  role: String!
  createdAt: String!
  updatedAt: String!
}

# Product Type
type Product {
  id: ID!
  name: String!
  description: String
  price: Float!
  stock: Int!
  category: Category
  createdAt: String!
  updatedAt: String!
}

# Category Type
type Category {
  id: ID!
  name: String!
  description: String
  products: [Product!]!
  createdAt: String!
  updatedAt: String!
}

# Order Type
type Order {
  id: ID!
  user: User!
  status: String!
  totalPrice: Float!
  items: [OrderItem!]!
  createdAt: String!
  updatedAt: String!
}

# Order Item Type
type OrderItem {
  id: ID!
  product: Product!
  quantity: Int!
  price: Float!
}

# Payment Type
type Payment {
  id: ID!
  order: Order!
  amount: Float!
  method: String!
  status: String!
  createdAt: String!
}

# Inputs for Mutations
input RegisterUserInput {
  name: String!
  email: String!
  password: String!
  role: String! # e.g., Admin, Customer
}

input UpdateUserInput {
  name: String
  email: String
  password: String
}

input AddProductInput {
  name: String!
  description: String
  price: Float!
  stock: Int!
  categoryId: ID!
}

input UpdateProductInput {
  name: String
  description: String
  price: Float
  stock: Int
  categoryId: ID
}

input AddCategoryInput {
  name: String!
  description: String
}

input UpdateCategoryInput {
  name: String
  description: String
}

input CreateOrderInput {
  userId: ID!
  items: [OrderItemInput!]!
}

input OrderItemInput {
  productId: ID!
  quantity: Int!
}

input CreatePaymentInput {
  orderId: ID!
  amount: Float!
  method: String! # e.g., Credit Card, PayPal
}
